/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PaymentTypes as PrismaPaymentTypes } from "@prisma/client";

export class PaymentTypesServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PaymentTypesCountArgs, "select">
  ): Promise<number> {
    return this.prisma.paymentTypes.count(args);
  }

  async paymentTypesItems(
    args: Prisma.PaymentTypesFindManyArgs
  ): Promise<PrismaPaymentTypes[]> {
    return this.prisma.paymentTypes.findMany(args);
  }
  async paymentTypes(
    args: Prisma.PaymentTypesFindUniqueArgs
  ): Promise<PrismaPaymentTypes | null> {
    return this.prisma.paymentTypes.findUnique(args);
  }
  async createPaymentTypes(
    args: Prisma.PaymentTypesCreateArgs
  ): Promise<PrismaPaymentTypes> {
    return this.prisma.paymentTypes.create(args);
  }
  async updatePaymentTypes(
    args: Prisma.PaymentTypesUpdateArgs
  ): Promise<PrismaPaymentTypes> {
    return this.prisma.paymentTypes.update(args);
  }
  async deletePaymentTypes(
    args: Prisma.PaymentTypesDeleteArgs
  ): Promise<PrismaPaymentTypes> {
    return this.prisma.paymentTypes.delete(args);
  }
}
