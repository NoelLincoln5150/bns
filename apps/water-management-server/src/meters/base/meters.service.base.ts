/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Meters as PrismaMeters } from "@prisma/client";

export class MetersServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.MetersCountArgs, "select">): Promise<number> {
    return this.prisma.meters.count(args);
  }

  async metersItems(args: Prisma.MetersFindManyArgs): Promise<PrismaMeters[]> {
    return this.prisma.meters.findMany(args);
  }
  async meters(
    args: Prisma.MetersFindUniqueArgs
  ): Promise<PrismaMeters | null> {
    return this.prisma.meters.findUnique(args);
  }
  async createMeters(args: Prisma.MetersCreateArgs): Promise<PrismaMeters> {
    return this.prisma.meters.create(args);
  }
  async updateMeters(args: Prisma.MetersUpdateArgs): Promise<PrismaMeters> {
    return this.prisma.meters.update(args);
  }
  async deleteMeters(args: Prisma.MetersDeleteArgs): Promise<PrismaMeters> {
    return this.prisma.meters.delete(args);
  }
}
