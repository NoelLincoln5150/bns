/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, IsEnum, ValidateNested } from "class-validator";
import { StringFilter } from "../../util/StringFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { FloatNullableFilter } from "../../util/FloatNullableFilter";
import { EnumContractStatus } from "./EnumContractStatus";
import { SuppliersWhereUniqueInput } from "../../suppliers/base/SuppliersWhereUniqueInput";

@InputType()
class ContractWhereInput {
  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  approved?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  numberField?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  pricePerUnit?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumContractStatus,
  })
  @IsEnum(EnumContractStatus)
  @IsOptional()
  @Field(() => EnumContractStatus, {
    nullable: true,
  })
  status?:
    | "Draft"
    | "PendingApproval"
    | "Approved"
    | "Rejected"
    | "SentforSignature"
    | "PartiallySigned"
    | "FullySigned"
    | "Active"
    | "OnHold"
    | "AmendmentinProgress"
    | "Expired"
    | "Terminated"
    | "Completed"
    | "Renewed"
    | "Cancelled";

  @ApiProperty({
    required: false,
    type: () => SuppliersWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => SuppliersWhereUniqueInput)
  @IsOptional()
  @Field(() => SuppliersWhereUniqueInput, {
    nullable: true,
  })
  supplierNumber?: SuppliersWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  titlle?: StringNullableFilter;
}

export { ContractWhereInput as ContractWhereInput };
