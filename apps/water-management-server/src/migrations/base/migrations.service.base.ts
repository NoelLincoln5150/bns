/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Migrations as PrismaMigrations } from "@prisma/client";

export class MigrationsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MigrationsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.migrations.count(args);
  }

  async migrationsItems(
    args: Prisma.MigrationsFindManyArgs
  ): Promise<PrismaMigrations[]> {
    return this.prisma.migrations.findMany(args);
  }
  async migrations(
    args: Prisma.MigrationsFindUniqueArgs
  ): Promise<PrismaMigrations | null> {
    return this.prisma.migrations.findUnique(args);
  }
  async createMigrations(
    args: Prisma.MigrationsCreateArgs
  ): Promise<PrismaMigrations> {
    return this.prisma.migrations.create(args);
  }
  async updateMigrations(
    args: Prisma.MigrationsUpdateArgs
  ): Promise<PrismaMigrations> {
    return this.prisma.migrations.update(args);
  }
  async deleteMigrations(
    args: Prisma.MigrationsDeleteArgs
  ): Promise<PrismaMigrations> {
    return this.prisma.migrations.delete(args);
  }
}
