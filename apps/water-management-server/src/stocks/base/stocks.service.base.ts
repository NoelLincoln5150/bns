/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Stocks as PrismaStocks } from "@prisma/client";

export class StocksServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.StocksCountArgs, "select">): Promise<number> {
    return this.prisma.stocks.count(args);
  }

  async stocksItems(args: Prisma.StocksFindManyArgs): Promise<PrismaStocks[]> {
    return this.prisma.stocks.findMany(args);
  }
  async stocks(
    args: Prisma.StocksFindUniqueArgs
  ): Promise<PrismaStocks | null> {
    return this.prisma.stocks.findUnique(args);
  }
  async createStocks(args: Prisma.StocksCreateArgs): Promise<PrismaStocks> {
    return this.prisma.stocks.create(args);
  }
  async updateStocks(args: Prisma.StocksUpdateArgs): Promise<PrismaStocks> {
    return this.prisma.stocks.update(args);
  }
  async deleteStocks(args: Prisma.StocksDeleteArgs): Promise<PrismaStocks> {
    return this.prisma.stocks.delete(args);
  }
}
