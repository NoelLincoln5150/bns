/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PasswordResets as PrismaPasswordResets } from "@prisma/client";

export class PasswordResetsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PasswordResetsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.passwordResets.count(args);
  }

  async passwordResetsItems(
    args: Prisma.PasswordResetsFindManyArgs
  ): Promise<PrismaPasswordResets[]> {
    return this.prisma.passwordResets.findMany(args);
  }
  async passwordResets(
    args: Prisma.PasswordResetsFindUniqueArgs
  ): Promise<PrismaPasswordResets | null> {
    return this.prisma.passwordResets.findUnique(args);
  }
  async createPasswordResets(
    args: Prisma.PasswordResetsCreateArgs
  ): Promise<PrismaPasswordResets> {
    return this.prisma.passwordResets.create(args);
  }
  async updatePasswordResets(
    args: Prisma.PasswordResetsUpdateArgs
  ): Promise<PrismaPasswordResets> {
    return this.prisma.passwordResets.update(args);
  }
  async deletePasswordResets(
    args: Prisma.PasswordResetsDeleteArgs
  ): Promise<PrismaPasswordResets> {
    return this.prisma.passwordResets.delete(args);
  }
}
