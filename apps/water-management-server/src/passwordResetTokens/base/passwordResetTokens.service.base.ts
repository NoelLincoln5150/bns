/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PasswordResetTokens as PrismaPasswordResetTokens,
} from "@prisma/client";

export class PasswordResetTokensServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PasswordResetTokensCountArgs, "select">
  ): Promise<number> {
    return this.prisma.passwordResetTokens.count(args);
  }

  async passwordResetTokensItems(
    args: Prisma.PasswordResetTokensFindManyArgs
  ): Promise<PrismaPasswordResetTokens[]> {
    return this.prisma.passwordResetTokens.findMany(args);
  }
  async passwordResetTokens(
    args: Prisma.PasswordResetTokensFindUniqueArgs
  ): Promise<PrismaPasswordResetTokens | null> {
    return this.prisma.passwordResetTokens.findUnique(args);
  }
  async createPasswordResetTokens(
    args: Prisma.PasswordResetTokensCreateArgs
  ): Promise<PrismaPasswordResetTokens> {
    return this.prisma.passwordResetTokens.create(args);
  }
  async updatePasswordResetTokens(
    args: Prisma.PasswordResetTokensUpdateArgs
  ): Promise<PrismaPasswordResetTokens> {
    return this.prisma.passwordResetTokens.update(args);
  }
  async deletePasswordResetTokens(
    args: Prisma.PasswordResetTokensDeleteArgs
  ): Promise<PrismaPasswordResetTokens> {
    return this.prisma.passwordResetTokens.delete(args);
  }
}
