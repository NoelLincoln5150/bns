/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Notes as PrismaNotes } from "@prisma/client";

export class NotesServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.NotesCountArgs, "select">): Promise<number> {
    return this.prisma.notes.count(args);
  }

  async notesItems(args: Prisma.NotesFindManyArgs): Promise<PrismaNotes[]> {
    return this.prisma.notes.findMany(args);
  }
  async notes(args: Prisma.NotesFindUniqueArgs): Promise<PrismaNotes | null> {
    return this.prisma.notes.findUnique(args);
  }
  async createNotes(args: Prisma.NotesCreateArgs): Promise<PrismaNotes> {
    return this.prisma.notes.create(args);
  }
  async updateNotes(args: Prisma.NotesUpdateArgs): Promise<PrismaNotes> {
    return this.prisma.notes.update(args);
  }
  async deleteNotes(args: Prisma.NotesDeleteArgs): Promise<PrismaNotes> {
    return this.prisma.notes.delete(args);
  }
}
