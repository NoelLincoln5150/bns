/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ProductListStock as PrismaProductListStock,
} from "@prisma/client";

export class ProductListStockServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ProductListStockCountArgs, "select">
  ): Promise<number> {
    return this.prisma.productListStock.count(args);
  }

  async productListStocks(
    args: Prisma.ProductListStockFindManyArgs
  ): Promise<PrismaProductListStock[]> {
    return this.prisma.productListStock.findMany(args);
  }
  async productListStock(
    args: Prisma.ProductListStockFindUniqueArgs
  ): Promise<PrismaProductListStock | null> {
    return this.prisma.productListStock.findUnique(args);
  }
  async createProductListStock(
    args: Prisma.ProductListStockCreateArgs
  ): Promise<PrismaProductListStock> {
    return this.prisma.productListStock.create(args);
  }
  async updateProductListStock(
    args: Prisma.ProductListStockUpdateArgs
  ): Promise<PrismaProductListStock> {
    return this.prisma.productListStock.update(args);
  }
  async deleteProductListStock(
    args: Prisma.ProductListStockDeleteArgs
  ): Promise<PrismaProductListStock> {
    return this.prisma.productListStock.delete(args);
  }
}
