/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, BankPaybill as PrismaBankPaybill } from "@prisma/client";

export class BankPaybillServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.BankPaybillCountArgs, "select">
  ): Promise<number> {
    return this.prisma.bankPaybill.count(args);
  }

  async bankPaybills(
    args: Prisma.BankPaybillFindManyArgs
  ): Promise<PrismaBankPaybill[]> {
    return this.prisma.bankPaybill.findMany(args);
  }
  async bankPaybill(
    args: Prisma.BankPaybillFindUniqueArgs
  ): Promise<PrismaBankPaybill | null> {
    return this.prisma.bankPaybill.findUnique(args);
  }
  async createBankPaybill(
    args: Prisma.BankPaybillCreateArgs
  ): Promise<PrismaBankPaybill> {
    return this.prisma.bankPaybill.create(args);
  }
  async updateBankPaybill(
    args: Prisma.BankPaybillUpdateArgs
  ): Promise<PrismaBankPaybill> {
    return this.prisma.bankPaybill.update(args);
  }
  async deleteBankPaybill(
    args: Prisma.BankPaybillDeleteArgs
  ): Promise<PrismaBankPaybill> {
    return this.prisma.bankPaybill.delete(args);
  }
}
