/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Otps as PrismaOtps } from "@prisma/client";

export class OtpsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.OtpsCountArgs, "select">): Promise<number> {
    return this.prisma.otps.count(args);
  }

  async otpsItems(args: Prisma.OtpsFindManyArgs): Promise<PrismaOtps[]> {
    return this.prisma.otps.findMany(args);
  }
  async otps(args: Prisma.OtpsFindUniqueArgs): Promise<PrismaOtps | null> {
    return this.prisma.otps.findUnique(args);
  }
  async createOtps(args: Prisma.OtpsCreateArgs): Promise<PrismaOtps> {
    return this.prisma.otps.create(args);
  }
  async updateOtps(args: Prisma.OtpsUpdateArgs): Promise<PrismaOtps> {
    return this.prisma.otps.update(args);
  }
  async deleteOtps(args: Prisma.OtpsDeleteArgs): Promise<PrismaOtps> {
    return this.prisma.otps.delete(args);
  }
}
