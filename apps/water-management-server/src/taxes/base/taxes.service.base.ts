/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Taxes as PrismaTaxes } from "@prisma/client";

export class TaxesServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.TaxesCountArgs, "select">): Promise<number> {
    return this.prisma.taxes.count(args);
  }

  async taxesItems(args: Prisma.TaxesFindManyArgs): Promise<PrismaTaxes[]> {
    return this.prisma.taxes.findMany(args);
  }
  async taxes(args: Prisma.TaxesFindUniqueArgs): Promise<PrismaTaxes | null> {
    return this.prisma.taxes.findUnique(args);
  }
  async createTaxes(args: Prisma.TaxesCreateArgs): Promise<PrismaTaxes> {
    return this.prisma.taxes.create(args);
  }
  async updateTaxes(args: Prisma.TaxesUpdateArgs): Promise<PrismaTaxes> {
    return this.prisma.taxes.update(args);
  }
  async deleteTaxes(args: Prisma.TaxesDeleteArgs): Promise<PrismaTaxes> {
    return this.prisma.taxes.delete(args);
  }
}
