datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Meter {
  coordinates      Json?
  createdAt        DateTime         @default(now())
  id               String           @id @default(cuid())
  installationDate DateTime?
  status           EnumMeterStatus?
  tokenBalance     Int?
  updatedAt        DateTime         @updatedAt
  usages           Usage?           @relation(fields: [usagesId], references: [id])
  usagesId         String?          @unique
  user             User?            @relation(fields: [userId], references: [id])
  userId           String?
}

model Ticket {
  createdAt    DateTime          @default(now())
  id           String            @id @default(cuid())
  message      String?
  status       EnumTicketStatus?
  subject      String?
  updatedAt    DateTime          @updatedAt
  user         User?             @relation(fields: [userId], references: [id])
  userId       String?
  userRelation String?
}

model Usage {
  amountUsed    Float?
  createdAt     DateTime  @default(now())
  id            String    @id @default(cuid())
  meter         Meter?
  meterRelation String?
  updatedAt     DateTime  @updatedAt
  usageDate     DateTime?
}

model Role {
  createdAt   DateTime @default(now())
  description String?
  id          String   @id @default(cuid())
  name        String?
  updatedAt   DateTime @updatedAt
  users       User[]
}

model User {
  createdAt DateTime @default(now())
  email     String?  @unique
  firstName String?
  id        String   @id @default(cuid())
  lastName  String?
  meters    Meter[]
  password  String
  role      Role[]
  roles     Json
  tickets   Ticket[]
  updatedAt DateTime @updatedAt
  username  String   @unique
}

model MeterData {
  createdAt      DateTime      @default(now())
  id             String        @id @default(cuid())
  prepaidMeter   PrepaidMeter? @relation(fields: [prepaidMeterId], references: [id])
  prepaidMeterId String?
  timestamp      DateTime?
  updatedAt      DateTime      @updatedAt
  value          Float?
}

model Command {
  commandType    EnumCommandCommandType?
  createdAt      DateTime                @default(now())
  id             String                  @id @default(cuid())
  parameter      String?
  prepaidMeter   PrepaidMeter?           @relation(fields: [prepaidMeterId], references: [id])
  prepaidMeterId String?
  sentAt         DateTime?
  updatedAt      DateTime                @updatedAt
}

model Alert {
  createdAt      DateTime        @default(now())
  id             String          @id @default(cuid())
  level          EnumAlertLevel?
  message        String?
  prepaidMeter   PrepaidMeter?   @relation(fields: [prepaidMeterId], references: [id])
  prepaidMeterId String?
  updatedAt      DateTime        @updatedAt
}

model PrepaidMeter {
  alerts         Alert[]
  commands       Command[]
  createdAt      DateTime                @default(now())
  id             String                  @id @default(cuid())
  meterDataItems MeterData[]
  meterNumber    String?
  status         EnumPrepaidMeterStatus?
  updatedAt      DateTime                @updatedAt
}

model CustomerMeter {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model Documents {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model Customers {
  b2bTransactionsItems B2bTransactions[]
  createdAt            DateTime          @default(now())
  id                   String            @id @default(cuid())
  updatedAt            DateTime          @updatedAt
}

model Premises {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model Stocks {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model PersonalAccessTokens {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model Suppliers {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model Taxables {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model PremisesWaterSource {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model DocumentNumbers {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model DocumentTypes {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model Meters {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model DocumentPayments {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model Logs {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model RevenueShares {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model Products {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model FailedJobs {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model ProductListStock {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model Taxes {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model WaterTokens {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model ProductLists {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model MeterTypes {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model ShortCodes {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model TransactionCosts {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model PaymentAccounts {
  b2bTransactionsItems B2bTransactions[]
  createdAt            DateTime          @default(now())
  id                   String            @id @default(cuid())
  updatedAt            DateTime          @updatedAt
}

model PasswordResetTokens {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model WaterSources {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model Otps {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model PasswordResets {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model PaymentTypes {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model Migrations {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model PaymentChannels {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model Notes {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model Users {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model B2bTransactions {
  amount           Float?
  createdAt        DateTime                   @default(now())
  customer         Customers?                 @relation(fields: [customerId], references: [id])
  customerId       String?
  id               String                     @id @default(cuid())
  paymentAccount   PaymentAccounts?           @relation(fields: [paymentAccountId], references: [id])
  paymentAccountId String?
  status           EnumB2bTransactionsStatus?
  transactionDate  DateTime?
  updatedAt        DateTime                   @updatedAt
}

model BankPaybill {
  createdAt DateTime @default(now())
  deletedAt String?
  enabled   String?
  id        String   @id @default(cuid())
  name      String?
  paybill   String?  @unique
  updatedAt DateTime @updatedAt
}

enum EnumMeterStatus {
  Active
  Inactive
  Suspended
  Maintenance
  Faulty
  Closed
  Pending
  Disconnected
}

enum EnumTicketStatus {
  Pending
  InProgress
  Resolved
  Closed
  Escalated
  OnHold
  Cancelled
  Scheduled
  AwaitingParts
  UnderReview
}

enum EnumCommandCommandType {
  Open
  Close
  Reset
}

enum EnumAlertLevel {
  Info
  Warning
  Urgent
  Error
  Critical
}

enum EnumPrepaidMeterStatus {
  Active
  Inactive
  Suspended
  Closed
}

enum EnumB2bTransactionsStatus {
  Option1
}
